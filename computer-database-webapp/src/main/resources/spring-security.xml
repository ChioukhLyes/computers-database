<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

	<http
		pattern="/css/**"
		security="none" />
	<http
		pattern="/js/**"
		security="none" />
	<http
		pattern="/fonts/**"
		security="none" />
	<http
		pattern="/images/**"
		security="none" />

	<http auto-config="true" use-expressions="true" >
		
		<access-denied-handler error-page="/403" />

		<intercept-url
			pattern="/addComputer*"
			access="hasRole('ROLE_ADMIN')" />
		<intercept-url
			pattern="/editComputer*"
			access="hasRole('ROLE_ADMIN')" />
		<intercept-url
			pattern="/delete*"
			access="hasRole('ROLE_ADMIN')" />

		<form-login
			login-page="/login"
			default-target-url="/login"
			authentication-failure-url="/login?errorr"
			username-parameter="username"
			password-parameter="password" />

		<logout logout-success-url="/login?logout" />

		<!-- <intercept-url pattern="/**" access="hasRole('ROLE_USER')" /> -->

	</http>


	<!-- <authentication-manager> <authentication-provider> <security:user-service> 
		<security:user name="dineshonjava" password="sweety" authorities="ROLE_USER" 
		/> </security:user-service> <jdbc-user-service data-source-ref="dataSource" 
		users-by-username-query="select username, password, role from users where 
		username=?" authorities-by-username-query="select username, role from users 
		where username =? " /> </authentication-provider> </authentication-manager> -->

	<!-- <authentication-manager> <authentication-provider user-service-ref="serviceUserDetails" 
		/> </authentication-manager> -->

	<authentication-manager>
		<authentication-provider ref="authProvider" >
		</authentication-provider>
	</authentication-manager>

	<beans:bean
		id="authProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property
			name="userDetailsService"
			ref="serviceUserDetails" />
		<beans:property
			name="passwordEncoder"
			ref="encoder" />
	</beans:bean>

	<beans:bean
		id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />


</beans:beans>